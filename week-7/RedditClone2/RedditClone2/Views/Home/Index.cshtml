@model IEnumerable<RedditClone2.Models.RedditPost>

@{
    ViewBag.Title = "Index";
}

<h2>@ViewBag.Title</h2>

@if (User.Identity.IsAuthenticated)
{
    <p>
        @Html.ActionLink("Create New", "Create")
    </p>
}



@foreach (var item in Model)
{
    <div class="panel panel-default">
        <div class="panel-body">
            <div class="row">
                @{
                    var upVotedClass = "";
                    var downVotedClass = "";
                    if (User.Identity.IsAuthenticated)
                    {
                        var userVote = item.Votes.SingleOrDefault(w => w.UserId == ViewBag.UserId);
                        if (userVote != null)
                        {
                            if (userVote.Weight == RedditClone2.Models.VoteWeight.UpVote)
                            {
                                upVotedClass = "upVoted";
                            }
                            else if (userVote.Weight == RedditClone2.Models.VoteWeight.DownVote)
                            {
                                downVotedClass = "downVoted";
                            }
                        }
                    }

                }
                <div class="col-xs-2">
                    <div><button class="up-button-for-@item.Id @upVotedClass" onclick="voteClick('@item.Id', '1')" @(User.Identity.IsAuthenticated ? "" : "disabled='disabled'") A><i class="glyphicon glyphicon-chevron-up"></i></button></div>
                    <div id="countFor-@item.Id">@item.VoteSum</div>
                    <div><button class="down-button-for-@item.Id @downVotedClass" onclick="voteClick('@item.Id', '-1')" @(User.Identity.IsAuthenticated ? "" : "disabled='disabled'")><i class="glyphicon glyphicon-chevron-down"></i></button></div>

                </div>
                <div class="col-xs-10">
                    <div>
                        <h3>@Html.DisplayFor(modelItem => item.Title)</h3>
                    </div>
                    <div>
                        @Html.DisplayFor(modelItem => item.Body)
                    </div>
                    <div>
                        <h6> @Html.DisplayFor(modelItem => item.Poster.Email)</h6>
                    </div>


                </div>
            </div>
        </div>
    </div>

                    }


@section scripts{
    <script>
        var colorButtonsForPost = function (postId, value) {
            var upButton = '.up-button-for-' + postId;
            var downButton = '.down-button-for-' + postId;
            if (value == "up")
            {
                $(upButton).addClass("upVoted");
                $(downButton).removeClass("downVoted");
            }
            else if (value == "down")
            {
                $(upButton).removeClass("upVoted");
                $(downButton).addClass("downVoted");
            }
            else {
                $(upButton).removeClass("upVoted");
                $(downButton).removeClass("downVoted");
            }
        }

        var updateCounter = function (newCount, id) {
            var itemToUpdate = "#countFor-" + id;
            $(itemToUpdate).html(newCount);
        }
        var voteClick = function (id, value) {
            console.log("Voting:" + value + "for" + id);
            // ajax call
            var json = {
                PostId: id,
                Vote: value
            }
            var route = "/api/vote/".concat(id, "/", (value == 1) ? "up" : "down");
            // var r = "/api/vote" + id + "/" + (value == 1) ? "up" : "down";
            $.ajax({
                type: 'POST',
                url: route,
                data: JSON.stringify(json),
                success: function (data) {
                    if (data.Message) {
                        alert(data.Message);
                    }
                    // disable the upvote button for this item
                    var newCount = data.NewCount;
                    var value = "noVote";
                    if (data.Vote)
                    {
                        if (data.Vote == 1) {
                            value = "up";
                        } else if (data.Vote == -1) {
                            value = "down";
                        }

                    }
                    colorButtonsForPost(id, value);
                    updateCounter(newCount, id);
                },
                contentType: "application/json",
                dataType: 'json'
            });
        }


    </script>
}